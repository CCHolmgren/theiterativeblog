{"title":"New things, changes and a refresh and a fail.","published":"2016-11-21 13:00","changes":"very large","write_time":"40 minutes","content":"<p>Things done since last time:<\/p>\r\n<ul>\r\n\t<li>Editing articles is now possbile, as you can see by the edit link on the side of every article. This is just a very easy way to do it, and in the future it will probably include some kind of login system, that then presents the edit link.<\/li>\r\n\t<li>The index.php file that everything is run via is now not located in the same directory as everything else. Instead I moved it into a separate <code>\/public\/<\/code> directory that will stay pretty empty (except for actual public things). This way of handling access to files is galaxies better than the likes of public hosted Wordpress, Joomla, or any other \"drag and installed\" frameworks. Instead of doing the whole ugly <code>defined(X) or die()<\/code> dance that you end up with, we now know that nobody can access our files, unless we specifically permit it. Trying to access the directory x by going to the url ..\/x\/ will not work either, since nginx takes care of that for us. This is the way that php should be used, not the way Wordpress or the likes are doing it.<\/li>\r\n\t<li>A great thing with php, and also a very bad thing, is that everything is like c. If you include a file, that file is just literally dropped into the parent file, and then executed as if it was there in the first place. This way you end up with a lot of global-ness, which can be a bad thing. However, when you got a simple code base, with very little code, it can be a good thing. <br>When you want to use templates, this is a great thing. Just define the variables that the template should have access to, and include it. Done. That is the way that I moved out the templates for the base html layout, and article templates into separate files. This leads to a lot less clutter in the php files, and makes it a lot more managable, since I do not need to bother with the fine details when I just want the bigger picture.<\/li>\r\n<\/ul>\r\n\r\n<p>To summarise: using separate files for articles and the layout, I could reduce the sie of the index.php file. I also moved it to another directory to prevent access to unwanted files and directories. As a bonus I added article editing as well.<\/p>\r\n\r\n<p>Something that I am thinking of implementing sometime soon is to allow for the \"time to write\" part of the article to be automatic instead of manually inputed. Either by a Javascript timer, or maybe by calculating the offset of the time in the \"written\" box? Who knows how it will actually work, that is for the future me to decide.<\/p>\r\n\r\n<p>Just as I was about to post this, I accidentally refreshed the page and lost my edits, or rather, just the title, and other small boxes of content, not the content box. That is very annoying, eventhough I did not lose the absolute majority of everything that I had written. So another feature is just to stop an immediate refresh of the page if any of the boxes has been changed. I did not lose the content since I am using a different editor to write the content, instead of using the textarea on the page. That is because I find it a lot easier to write with the help of a real editor, that understands html a little better, and allows me to tab complete things, and format them better.<\/p>\r\n<p>Ps: Forgot that the reference to the .password file still pointed to the same directory as the index.php file, so when I went ahead and saved the article, it failed again. Sigh.<\/p>"}